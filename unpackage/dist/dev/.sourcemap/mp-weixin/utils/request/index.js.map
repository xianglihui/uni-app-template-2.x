{"version":3,"file":"index.js","sources":["utils/request/index.js"],"sourcesContent":["import Request from \"./request.js\";\r\nimport store from \"@/store/index.js\";\r\n\r\n\r\nconst baseUrl = process.env.NODE_ENV === 'development' ? 'http://localhost:3000' : 'https://www.pyhstzyy.cn/jeecg-boot';\r\n\r\n\r\nconst config = {\r\n    baseUrl,\r\n};\r\nconst reqInterceptor = async (options) => {\r\n    //请求拦截器，设置header的一些内容\r\n    options.header = {\r\n        ...options.header,\r\n        'X-Access-Token': `${store.getters.token}`,\r\n    };\r\n    if (!store.getters.token) {\r\n        delete options.header[\"authorization\"];\r\n    }\r\n\r\n    //加载提示,是否显示loading显示\r\n    if (!options.hideLoading) {\r\n        uni.showLoading({\r\n            title: \"正在加载中...\",\r\n            mask: options.mask,\r\n        });\r\n    }\r\n    return options;\r\n};\r\n//定义响应拦截\r\nconst resInterceptor = (response) => {\r\n    return statusCodeFun(response);\r\n};\r\nconst statusCodeFun = (response) => {\r\n    const { statusCode, errMsg, data } = response;\r\n    // uni.hideLoading({\r\n    //   noConflict: true\r\n    // });\r\n    if (statusCode == 200) {\r\n        if (data.code === 500) {\r\n            setTimeout(() => {\r\n                uni.showToast({\r\n                    title: data.message || '操作失败，请联系后台管理员',\r\n                    mask: true,\r\n                    icon: 'none',\r\n                    duration: 2000\r\n                });\r\n            }, 0);\r\n            // uni.showToast({\r\n            //   icon: \"none\",\r\n            //   title: data.message || '操作失败，请联系后台管理员',\r\n            //   duration: 2000\r\n            // });\r\n            return;\r\n        } else if (data.code === 510) {\r\n            setTimeout(() => {\r\n                uni.showToast({\r\n                    title: data.message || '操作失败，请联系后台管理员',\r\n                    mask: true,\r\n                    icon: 'none',\r\n                    duration: 2000\r\n                });\r\n            }, 0);\r\n        }\r\n        // else if (data.code === 200 && data.result?.code === '-1') {\r\n        //   uni.showToast({\r\n        //     icon: \"none\",\r\n        //     title: data.result.msg || '操作失败，请联系后台管理员',\r\n        //     duration: 2000\r\n        //   });\r\n        // } \r\n        else {\r\n            return response.data;\r\n        }\r\n    } else if (statusCode == 204) {\r\n        return {\r\n            wakaryReqReject: true,\r\n            msg: errMsg,\r\n            res: response,\r\n        };\r\n    } else if (statusCode == 401) {\r\n        store.commit('saveToken', 0)\r\n        store.commit('saveOpenid', 0)\r\n        store.commit('saveUserInfo', {\r\n            data: 0,\r\n            isSave: true\r\n        });\r\n        return {\r\n            wakaryReqReject: true,\r\n            msg: errMsg,\r\n            res: response,\r\n        };\r\n    } else if (statusCode == 299) {\r\n        uni.showToast({\r\n            icon: \"none\",\r\n            title: response.data,\r\n            duration: 2000\r\n        });\r\n        return {\r\n            wakaryReqReject: true,\r\n            msg: errMsg,\r\n            res: response,\r\n        };\r\n    } else if (statusCode >= 500) {\r\n        uni.showToast({\r\n            icon: \"none\",\r\n            title: \"网关异常\",\r\n            duration: 2000\r\n        });\r\n        return {\r\n            wakaryReqReject: true,\r\n            msg: \"网关异常\",\r\n            res: response,\r\n        };\r\n    } else if (statusCode == 404) {\r\n        return {\r\n            wakaryReqReject: true,\r\n            msg: \"接口丢失了\",\r\n            res: response,\r\n        };\r\n    } else {\r\n        uni.showToast({\r\n            icon: \"none\",\r\n            title: errMsg,\r\n            duration: 2000\r\n\r\n        });\r\n        return {\r\n            wakaryReqReject: true,\r\n            msg: \"服务器异常\",\r\n            res: response,\r\n        };\r\n    }\r\n};\r\nconst request = new Request(config, reqInterceptor, resInterceptor);\r\nexport default request;\r\n"],"names":["store","uni","Request"],"mappings":";;;;AAIA,MAAM,UAAmD;AAGzD,MAAM,SAAS;AAAA,EACX;AACJ;AACA,MAAM,iBAAiB,OAAO,YAAY;AAEtC,UAAQ,SAAS;AAAA,IACb,GAAG,QAAQ;AAAA,IACX,kBAAkB,GAAGA,YAAAA,MAAM,QAAQ,KAAK;AAAA,EAAA;AAExC,MAAA,CAACA,YAAAA,MAAM,QAAQ,OAAO;AACf,WAAA,QAAQ,OAAO,eAAe;AAAA,EACzC;AAGI,MAAA,CAAC,QAAQ,aAAa;AACtBC,kBAAAA,MAAI,YAAY;AAAA,MACZ,OAAO;AAAA,MACP,MAAM,QAAQ;AAAA,IAAA,CACjB;AAAA,EACL;AACO,SAAA;AACX;AAEA,MAAM,iBAAiB,CAAC,aAAa;AACjC,SAAO,cAAc,QAAQ;AACjC;AACA,MAAM,gBAAgB,CAAC,aAAa;AAChC,QAAM,EAAE,YAAY,QAAQ,KAAA,IAAS;AAIrC,MAAI,cAAc,KAAK;AACf,QAAA,KAAK,SAAS,KAAK;AACnB,iBAAW,MAAM;AACbA,sBAAAA,MAAI,UAAU;AAAA,UACV,OAAO,KAAK,WAAW;AAAA,UACvB,MAAM;AAAA,UACN,MAAM;AAAA,UACN,UAAU;AAAA,QAAA,CACb;AAAA,SACF,CAAC;AAMJ;AAAA,IAAA,WACO,KAAK,SAAS,KAAK;AAC1B,iBAAW,MAAM;AACbA,sBAAAA,MAAI,UAAU;AAAA,UACV,OAAO,KAAK,WAAW;AAAA,UACvB,MAAM;AAAA,UACN,MAAM;AAAA,UACN,UAAU;AAAA,QAAA,CACb;AAAA,SACF,CAAC;AAAA,IAAA,OASH;AACD,aAAO,SAAS;AAAA,IACpB;AAAA,EAAA,WACO,cAAc,KAAK;AACnB,WAAA;AAAA,MACH,iBAAiB;AAAA,MACjB,KAAK;AAAA,MACL,KAAK;AAAA,IAAA;AAAA,EACT,WACO,cAAc,KAAK;AACpBD,gBAAAA,MAAA,OAAO,aAAa,CAAC;AACrBA,gBAAAA,MAAA,OAAO,cAAc,CAAC;AAC5BA,gBAAA,MAAM,OAAO,gBAAgB;AAAA,MACzB,MAAM;AAAA,MACN,QAAQ;AAAA,IAAA,CACX;AACM,WAAA;AAAA,MACH,iBAAiB;AAAA,MACjB,KAAK;AAAA,MACL,KAAK;AAAA,IAAA;AAAA,EACT,WACO,cAAc,KAAK;AAC1BC,kBAAAA,MAAI,UAAU;AAAA,MACV,MAAM;AAAA,MACN,OAAO,SAAS;AAAA,MAChB,UAAU;AAAA,IAAA,CACb;AACM,WAAA;AAAA,MACH,iBAAiB;AAAA,MACjB,KAAK;AAAA,MACL,KAAK;AAAA,IAAA;AAAA,EACT,WACO,cAAc,KAAK;AAC1BA,kBAAAA,MAAI,UAAU;AAAA,MACV,MAAM;AAAA,MACN,OAAO;AAAA,MACP,UAAU;AAAA,IAAA,CACb;AACM,WAAA;AAAA,MACH,iBAAiB;AAAA,MACjB,KAAK;AAAA,MACL,KAAK;AAAA,IAAA;AAAA,EACT,WACO,cAAc,KAAK;AACnB,WAAA;AAAA,MACH,iBAAiB;AAAA,MACjB,KAAK;AAAA,MACL,KAAK;AAAA,IAAA;AAAA,EACT,OACG;AACHA,kBAAAA,MAAI,UAAU;AAAA,MACV,MAAM;AAAA,MACN,OAAO;AAAA,MACP,UAAU;AAAA,IAAA,CAEb;AACM,WAAA;AAAA,MACH,iBAAiB;AAAA,MACjB,KAAK;AAAA,MACL,KAAK;AAAA,IAAA;AAAA,EAEb;AACJ;AACA,MAAM,UAAU,IAAIC,sBAAAA,QAAQ,QAAQ,gBAAgB,cAAc;;"}