{"version":3,"file":"request.js","sources":["utils/request/request.js"],"sourcesContent":["import { reqConfig } from \"./requestConfig.js\"\r\nexport default class Request {\r\n    constructor(config = {}, reqInterceptor = null, resInterceptor = null, successHandler = null, failHandler = null, completehandler = null) {\r\n        this.baseUrl = config.baseUrl;\r\n        this.header = config.header || {\r\n            \"Content-Type\": \"application/json;charset=UTF-8\"\r\n        };\r\n        this.requestInterceptor = reqInterceptor;\r\n        this.responseInterceptor = resInterceptor;\r\n        this.success = successHandler;\r\n        this.fail = failHandler;\r\n        this.complete = completehandler;\r\n    }\r\n    async request(options, successHandler = null, failHandler = null, completeHandler = null) {\r\n        const { type = 'request', hideLoading = false } = options;\r\n        let config = null;\r\n        try {\r\n            config = await reqConfig(this, options, successHandler, failHandler, completeHandler);\r\n        } catch (e) {\r\n            //TODO handle the exception\r\n            console.error(e)\r\n        }\r\n        if (!config || typeof config != 'object') {\r\n            return Promise.reject({});\r\n        }\r\n        const _this = this;\r\n        return new Promise((res, rej) => {\r\n            config['success'] = response => {\r\n                let _res = null;\r\n                if (_this.responseInterceptor) {\r\n                    _res = _this.responseInterceptor(response);\r\n                }\r\n                if (!_res) {\r\n                    return;\r\n                }\r\n                successHandler && successHandler(response)\r\n                if (_res.wakaryReqReject) {\r\n                    delete _res.wakaryReqReject;\r\n                    _res.url = config.url;\r\n                    _res.method = config.method;\r\n                    _res.params = config.data;\r\n                    rej(_res);\r\n                } else {\r\n                    res(_res);\r\n                }\r\n            };\r\n            config['fail'] = err => {\r\n                failHandler && failHandler(err);\r\n            };\r\n            config['complete'] = res => {\r\n                let status = [200, 204, 401]\r\n                if (status.includes(res.statusCode) && !hideLoading) {\r\n                    uni.hideLoading();\r\n                }\r\n                completeHandler && completeHandler(res);\r\n            };\r\n            requestType(type, config);\r\n        })\r\n    }\r\n}\r\nconst requestType = (type, config) => {\r\n    switch (type) {\r\n        case 'request':\r\n            uni.request(config);\r\n            break;\r\n        case 'upload':\r\n            uni.upload(config);\r\n            break;\r\n        default:\r\n            uni.downloadFile(config);\r\n    }\r\n}"],"names":["reqConfig","uni","res"],"mappings":";;;AACe,MAAM,QAAQ;AAAA,EACzB,YAAY,SAAS,CAAA,GAAI,iBAAiB,MAAM,iBAAiB,MAAM,iBAAiB,MAAM,cAAc,MAAM,kBAAkB,MAAM;AACtI,SAAK,UAAU,OAAO;AACtB,SAAK,SAAS,OAAO,UAAU;AAAA,MAC3B,gBAAgB;AAAA,IAC5B;AACQ,SAAK,qBAAqB;AAC1B,SAAK,sBAAsB;AAC3B,SAAK,UAAU;AACf,SAAK,OAAO;AACZ,SAAK,WAAW;AAAA,EACnB;AAAA,EACD,MAAM,QAAQ,SAAS,iBAAiB,MAAM,cAAc,MAAM,kBAAkB,MAAM;AACtF,UAAM,EAAE,OAAO,WAAW,cAAc,MAAK,IAAK;AAClD,QAAI,SAAS;AACb,QAAI;AACA,eAAS,MAAMA,4BAAAA,UAAU,MAAM,SAAS,gBAAgB,aAAa,eAAe;AAAA,IACvF,SAAQ,GAAG;AAERC,oBAAAA,MAAc,MAAA,SAAA,kCAAA,CAAC;AAAA,IAClB;AACD,QAAI,CAAC,UAAU,OAAO,UAAU,UAAU;AACtC,aAAO,QAAQ,OAAO,CAAA,CAAE;AAAA,IAC3B;AACD,UAAM,QAAQ;AACd,WAAO,IAAI,QAAQ,CAAC,KAAK,QAAQ;AAC7B,aAAO,SAAS,IAAI,cAAY;AAC5B,YAAI,OAAO;AACX,YAAI,MAAM,qBAAqB;AAC3B,iBAAO,MAAM,oBAAoB,QAAQ;AAAA,QAC5C;AACD,YAAI,CAAC,MAAM;AACP;AAAA,QACH;AACD,0BAAkB,eAAe,QAAQ;AACzC,YAAI,KAAK,iBAAiB;AACtB,iBAAO,KAAK;AACZ,eAAK,MAAM,OAAO;AAClB,eAAK,SAAS,OAAO;AACrB,eAAK,SAAS,OAAO;AACrB,cAAI,IAAI;AAAA,QAC5B,OAAuB;AACH,cAAI,IAAI;AAAA,QACX;AAAA,MACjB;AACY,aAAO,MAAM,IAAI,SAAO;AACpB,uBAAe,YAAY,GAAG;AAAA,MAC9C;AACY,aAAO,UAAU,IAAI,CAAAC,SAAO;AACxB,YAAI,SAAS,CAAC,KAAK,KAAK,GAAG;AAC3B,YAAI,OAAO,SAASA,KAAI,UAAU,KAAK,CAAC,aAAa;AACjDD,wBAAG,MAAC,YAAW;AAAA,QAClB;AACD,2BAAmB,gBAAgBC,IAAG;AAAA,MACtD;AACY,kBAAY,MAAM,MAAM;AAAA,IACpC,CAAS;AAAA,EACJ;AACL;AACA,MAAM,cAAc,CAAC,MAAM,WAAW;AAClC,UAAQ,MAAI;AAAA,IACR,KAAK;AACDD,0BAAI,QAAQ,MAAM;AAClB;AAAA,IACJ,KAAK;AACDA,0BAAI,OAAO,MAAM;AACjB;AAAA,IACJ;AACIA,0BAAI,aAAa,MAAM;AAAA,EAC9B;AACL;;"}